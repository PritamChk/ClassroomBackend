[[source]]
url = "https://pypi.org/simple"
verify_ssl = true
name = "pypi"

[packages]
django = "*"
djangorestframework = "*"
markdown = "*"
djoser = "*"
djangorestframework-simplejwt = "*"
django-extensions = "*"
drf-yasg = "*"
django-cors-headers = "*"
whitenoise = "*"
gunicorn = "*"
dj-database-url = "*"
psycopg2 = "*"
termcolor = "*"
pandas = "*"
openpyxl = "*"
redis = "*"
celery = "*"
eventlet = "*"
drf-nested-routers = "*"
drf-writable-nested = "*"

[dev-packages]
black = "*"
django-debug-toolbar = "*"
mysqlclient = "*"
waitress = "*"

[requires]
python_version = "3.10"

[pipenv]
allow_prereleases = true

[scripts]
dev = "docker-compose up -d"
dev-show = "docker-compose up"
logs = 'docker-compose logs -f web'
stop = 'docker-compose down'
db-update = "docker-compose run web python manage.py makemigrations"
db-apply = "docker-compose run web python manage.py migrate"
db-reset = "docker-compose run web python manage.py reset_db"
make-admin = "docker-compose run web python manage.py createsuperuser"
admin-code = 'docker-compose run web python manage.py admin_generator classroom'
cmd = "docker-compose run web python manage.py shell_plus"
lint = "docker-compose run web black ./"

# dev = "py manage.py runserver 8000"
# serve = "waitress-serve --listen=*:9000 core.wsgi:application"
# db-update = "py manage.py makemigrations"
# db-apply = "py manage.py migrate"
# db_clear = "py manage.py reset_db"
# deploy = "git push heroku main"
# smtp = "docker run -it -p 5000:80 -p 2525:25 rnwood/smtp4dev"
# make-admin = "py manage.py createsuperuser"
# admin-code = 'py manage.py admin_generator classroom'
# redis = "docker run -d -p 6379:6379 redis"
# celery = "celery -A core worker -l info -P eventlet -E"
# cmd = "py manage.py shell_plus"
# lint = "black ./"
